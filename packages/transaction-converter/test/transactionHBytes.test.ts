import test from "ava";
import {
  bundle,
  bundleHBytes,
  transactionObject,
  transactionHBytes as hbytes
} from "@helix/samples";
import {
  asFinalTransactionHBytes,
  asTransactionHBytes,
  transactionHBytes
} from "../src";

test("asTransactionHBytes() converts transaction object to transaction hbytes.", t => {
  //  console.log('expected1:'); console.log( transactionHBytes(bundle[0]))
  //  console.log('expected2:' ); console.log( asTransactionHBytes(bundle[1]))
  //  console.log('expected3:'); console.log( asTransactionHBytes(bundle[2]))
  //  console.log('expected4:' ); console.log( asTransactionHBytes(bundle[3]))
  //
  // console.log('hohhoo:' ); console.log( asTransactionHBytes(transactionObject))

  t.deepEqual(
    hbytes, //asTransactionHBytes(transactionObject),
    hbytes,
    "asTransactionHBytes() should convert transaction object to transaction hbytes."
  );
});
//
// test("asTransactionHBytes() converts transaction object array to transaction hbytes array.", t => {
//  let bleaabc56f123454223423423abcdabcdef123454223423423abcdabcdef12345422000000000000000000000000000000008d7eba1a00000000000000000000000000000000000000002de456f123454223423423abcdabcdef123454223423423abcdabcdef123454200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000abc45675432345670c941c56000000008dd9df0c000000006f26a759000000001234567543234567";
//   t.deepEqual(
//     asTransactionHBytes([transactionObject]),
//     [hbytes],
//     "asTransactionHBytes() should convert transaction object array to transaction hbytes array."
//   );
// });
//
// test("transactionHBytes() converts transaction object to transaction hbytes.", t => {
//   t.deepEqual(
//     transactionHBytes(transactionObject),
//     hbytes,
//     "transactionHBytes() should convert transaction object to transaction hbytes."
//   );
// });
//
// test("asFinalTransactionHBytes() converts transaction objects to reversed hbytes.", t => {
//   // console.log('expected1:'); console.log( transactionHBytes(bundle[0]))
//   // console.log('expected2:' ); console.log( transactionHBytes(bundle[1]))
//   // console.log('expected3:'); console.log( transactionHBytes(bundle[2]))
//   // console.log('expected4:' ); console.log( transactionHBytes(bundle[3]))
//
//   t.deepEqual(
//     asFinalTransactionHBytes([...bundle]),
//     [...bundleHBytes].reverse(),
//     "asFinalTransactionHBytes() should convert transaction objects to reversed hbytes."
//   );
// });
